# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ '8']

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.Java }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dmaven.test.skip=true

    - name: 删除旧的jar包以及运行脚本
      run: sshpass -p "${{ secrets.REMOTE_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.REMOTE_IP }} "cd /root/java-project && rm -rf ./*.jar"

    - name: 上传jar包和启动脚本到服务器中
      env:
        REMOTE_IP: ${{ secrets.REMOTE_IP }}
        REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
      run: sshpass -p "$REMOTE_PASSWORD" scp -r -o StrictHostKeyChecking=no ./yudao-server/target/yudao-server.jar  root@$REMOTE_IP:/root/java-project

    - name: 启动项目
      run: sshpass -p "${{ secrets.REMOTE_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${{ secrets.REMOTE_IP }} "cd /root/java-project && sh start.sh"